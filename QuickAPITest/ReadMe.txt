Scrumwise / Kanbanize library AKA Scrumnbanize

Project: QuickAPITest (The Kanbanize->Scrumwise mover)
Setup: 
 -> App.Config has system variables
	scrumwiseUser - The user doing the login, and therefore is credited with all the actions, on Scrumwise 
	scrumwiseKey - The API key connected to the aforementioned user on Scrumwise
	scrumwiseAPI - The URL to the Scumwise API you want to connnect to, we're using v1
	scrumwiseKanbanizeTag - The Tag ID of the Kanbanize tag in Scrumwise, is used to differentiate where the task comes from and if the mover should handle it
	scrumwiseKanbanizeTag - The Tag ID of the Rejected tag in Scrumwise, is used to designate a Scumwise task for deletion and adding the rejected tag on the task in Kanbanize
	scrumwiseProjectID - A comma-seperated list of Scrumwise project ID's. Will cycle through each of the projects in order and match up with the connected Kanbanize board Id.
	scrumwiseBacklogListID - A comma-seperated list of Scrumwise backloglist ID's. Corresponds to the Scrumwise project ID in the same position in the list. Is used to tell the mover in which list to put the data from Kanbanize.
	kanbanizeBoardID - A comma-seperated list of Kanbanize board ID's. Used to tell from which board the mover should look at on Kanbanize. Corresponds to same position in the scrumwiseProjectID list.
	kanbanizeLaneA - A comma-seperated list of Kanbanize lane names. Used to tell from which lane the mover should look at on Kanbanize. Correlates with the above board id in the same position in the list.
	kanbanizeAPI - The URL to the Kanbanize API used.
	kanbanizeAPIKey - Which API key to use, we're using apikey
	kanbanizeAPIKeyValue - The value of the key chosen

Run: 
	Needs to run "often" to accomplish the desired effect.
	Can run as a service in the background on a server
	Has a master-slave relationship where Scrumwise determines the status of the task.
		Except in cases where the task in Kanbanize get set to Done, in this specific case, the Scrumwise task will also be set to Done.
	Srumwise users can "Reject" tasks with the "Rejected" tag in Scrumwise. This will remove it from Scrumwise and add the rejected tag on the task in Kanbanize.



Project: SprintTemplate
Setup:
 -> App.Config has system variables
	scrumwiseUser - The user doing the login, and therefore is credited with all the actions, on Scrumwise 
	scrumwiseKey - The API key connected to the aforementioned user on Scrumwise
	scrumwiseAPI - The URL to the Scumwise API you want to connnect to, we're using v1
	scrumwiseProjectID - The Scrumwise Project the sprint will be on.
	scrumwiseBacklogListID - The Scrumwise Backlog list where the templates for the new sprint are. Also the list where the new tasks will be auto-generated to.
	scrumwiseTeamID - The ID of the Scumwise team responsible for the new sprint.
	scrumwiseTemplateTagID - The Tag ID of the Template tag in Scrumwise, is used to differentiate between autogenerated and tasks to be auto-generated. If it has the template tag, it will added to the new sprint.
	scrumwiseEstimateUnit - The unit in which the estimates of the templates are made
Run:
	Need to be run manually
	A new sprint must be made and hours must be allocated to it before the templates can be added
	When run a console wil appear to ask for the new sprint name where it should add the templates to

	
Project: ScrumbanizeLibrary
	Includes:
		Kanbanize.cs - Where all methods pertaining to Kanbanize is currently stored
		Scrumwise.cs - Where all methods pertaining to Scrumwise is currently stored
	Usage:
		Run the constructor with the appropriate variables, preferably taken from the App.config
